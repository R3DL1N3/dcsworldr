% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/luae.R
\name{luae.exe}
\alias{luae.exe}
\title{Run Lua Interpreter}
\usage{
luae.exe(...)
}
\arguments{
\item{...}{
  Arguments passed on to \code{\link[base:system2]{base::system2}}
  \describe{
    \item{\code{command}}{the system command to be invoked, as a character string.}
    \item{\code{args}}{a character vector of arguments to \command{command}.}
    \item{\code{stdout,stderr}}{where output to \file{stdout} or
    \file{stderr} should be sent.  Possible values are \code{""}, to the \R
    console (the default), \code{NULL} or \code{FALSE} (discard output),
    \code{TRUE} (capture the output in a character vector) or a
    character string naming a file.}
    \item{\code{stdin}}{should input be diverted?  \code{""} means the default,
    alternatively a character string naming a file.  Ignored
    if \code{input} is supplied.}
    \item{\code{input}}{if a character vector is supplied, this is copied one
    string per line to a temporary file, and the standard input of
    \code{command} is redirected to the file.}
    \item{\code{env}}{character vector of name=value strings to set environment
    variables.}
    \item{\code{wait}}{a logical (not \code{NA}) indicating whether the \R
    interpreter should wait for the command to finish, or run it
    asynchronously.  This will be ignored (and the interpreter will
    always wait) if \code{stdout = TRUE} or \code{stderr = TRUE}. When
    running the command asynchronously, no output will be displayed on
    the \code{Rgui} console in Windows (it will be dropped, instead).}
    \item{\code{timeout}}{timeout in seconds, ignored if 0.  This is a limit for the
    elapsed time running \code{command} in a separate process.   Fractions
    of seconds are ignored.}
    \item{\code{minimized}}{logical (not \code{NA}), indicates whether the
    command window should be displayed initially as a minimized window.}
    \item{\code{invisible}}{logical (not \code{NA}), indicates whether the
    command window should be visible on the screen.}
  }}
}
\description{
Executes DCS World's \code{luae.exe} Lua 5.1.5 interpreter.
}
\details{
You do not need to shell-quote standard input, as you might expect.
However, you \emph{do} need to quote for Lua snippets passing through the
command line arguments. See examples.
}
\examples{
\dontrun{
library(dcsworldr)

luae.exe()
#> Lua 5.1.5  Copyright (C) 1994-2012 Lua.org, PUC-Rio
#> >

luae.exe(input = "print(123)")
luae.exe(input = 'print("hello world")', stdout = TRUE)
luae.exe(c("-e", shQuote('print("hello world")')), stdout = TRUE)
luae.exe(c("-e", "io.write(package.path)"), stdout = TRUE)
luae.exe(c("-e", "io.write(package.cpath)"), stdout = TRUE)

# https://www.lua.org/pil/8.2.html
luae.exe(c("-e",
  shQuote("assert(package.loadlib('lua-socket', 'luaopen_socket_core'))()")))
}
}
